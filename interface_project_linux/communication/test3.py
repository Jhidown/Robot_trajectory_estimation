import serial
import time

PORT = "/dev/ttyUSB0"
BAUDRATE = 115200

def construire_trame(can_id, data):
    dlc = len(data)
    if dlc > 8:
        raise ValueError("Max 8 octets de données")
    control = 0xC0 | dlc  # standard frame + data frame + DLC
    trame = bytearray([0xAA, control, can_id & 0xFF, (can_id >> 8) & 0xFF])
    trame.extend(data)
    trame.append(0x55)
    return trame

def envoyer_message(ser, can_id, data):
    trame = construire_trame(can_id, data)
    ser.write(trame)
    print(f"Envoyé : {can_id:03X} [{' '.join(f'{b:02X}' for b in data)}]")

def main():
    with serial.Serial(PORT, BAUDRATE, timeout=0.1) as ser:
        # Exemple : envoyer ID=0x701 avec 7F 00 00 00
        envoyer_message(ser, 0x000, [0x01, 0x01])
        envoyer_message(ser, 0x000, [0x01, 0x02])
        time.sleep(1)

        envoyer_message(ser, 0x601, [0x2B, 0x40, 0x60, 0x00, 0x80, 0x00, 0x00, 0x00])
        envoyer_message(ser, 0x602, [0x2B, 0x40, 0x60, 0x00, 0x80, 0x00, 0x00, 0x00])
        time.sleep(1)
        #speed mode
        envoyer_message(ser, 0x601, [0x2F, 0x60, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00])
        envoyer_message(ser, 0x602, [0x2F, 0x60, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00])
        time.sleep(1)
        #ready to SWO
        envoyer_message(ser, 0x601, [0x2B, 0x40, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00])
        envoyer_message(ser, 0x602, [0x2B, 0x40, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00])
        time.sleep(1)
        #SWO
        envoyer_message(ser, 0x601, [0x2B, 0x40, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00])
        envoyer_message(ser, 0x602, [0x2B, 0x40, 0x60, 0x00, 0x07, 0x00, 0x00, 0x00])
        time.sleep(1)
        #Enabled
        envoyer_message(ser, 0x601, [0x2B, 0x40, 0x60, 0x00, 0x0F, 0x00, 0x00, 0x00])
        envoyer_message(ser, 0x602, [0x2B, 0x40, 0x60, 0x00, 0x0F, 0x00, 0x00, 0x00])
        time.sleep(1)
        #SPEED 15000 -15000
        envoyer_message(ser, 0x601, [0x23, 0xFF, 0x60, 0x00, 0x98, 0x3A, 0x00, 0x00])
        envoyer_message(ser, 0x602, [0x23, 0xFF, 0x60, 0x00, 0x68, 0xC5, 0xFF, 0xFF])

        time.sleep(2)

        # Stop the motors
        envoyer_message(ser, 0x601, [0x23, 0xFF, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00])
        envoyer_message(ser, 0x602, [0x23, 0xFF, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00])


if __name__ == "__main__":
    main()
